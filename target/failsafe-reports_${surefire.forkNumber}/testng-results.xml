<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="8" passed="7" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-11-06T13:31:44Z" name="Surefire suite" finished-at="2021-11-06T13:34:10Z" duration-ms="146517">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(cucumber.api.testng.PickleEventWrapper, cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:runner.BaseRunner@4c309d4d]" name="runScenario" class="cucumber.api.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2021-11-06T13:31:44Z" name="Surefire test" finished-at="2021-11-06T13:34:10Z" duration-ms="146517">
      <class name="runner.BaseRunner">
        <test-method is-config="true" signature="setUpClass()[pri:0, instance:runner.BaseRunner@4c309d4d]" started-at="2021-11-06T13:31:44Z" name="setUpClass" finished-at="2021-11-06T13:31:44Z" duration-ms="383" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method is-config="true" signature="before()[pri:0, instance:runner.BaseRunner@4c309d4d]" started-at="2021-11-06T13:31:44Z" name="before" finished-at="2021-11-06T13:31:44Z" duration-ms="43" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method signature="runScenario(cucumber.api.testng.PickleEventWrapper, cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:runner.BaseRunner@4c309d4d]" started-at="2021-11-06T13:31:44Z" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-11-06T13:31:55Z" duration-ms="10779" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validate weather api call to current location by city name or city id or zip code"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Open weather website Feature"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(cucumber.api.testng.PickleEventWrapper, cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:runner.BaseRunner@4c309d4d]" started-at="2021-11-06T13:31:55Z" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-11-06T13:32:03Z" duration-ms="8151" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validate weather api call to current location by city name or city id or zip code"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Open weather website Feature"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(cucumber.api.testng.PickleEventWrapper, cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:runner.BaseRunner@4c309d4d]" started-at="2021-11-06T13:32:03Z" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-11-06T13:32:12Z" duration-ms="8178" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validate weather api call to current location by city name or city id or zip code"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Open weather website Feature"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(cucumber.api.testng.PickleEventWrapper, cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:runner.BaseRunner@4c309d4d]" started-at="2021-11-06T13:32:12Z" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-11-06T13:32:20Z" duration-ms="8172" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validate weather api call to current location by city name or city id or zip code"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Open weather website Feature"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(cucumber.api.testng.PickleEventWrapper, cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:runner.BaseRunner@4c309d4d]" started-at="2021-11-06T13:32:20Z" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-11-06T13:32:28Z" duration-ms="8258" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validate weather api call to current location by geographic coordinates"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Open weather website Feature"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(cucumber.api.testng.PickleEventWrapper, cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:runner.BaseRunner@4c309d4d]" started-at="2021-11-06T13:32:28Z" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-11-06T13:33:09Z" duration-ms="40632" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify user registration to Takealot website"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Takealot website Feature"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(cucumber.api.testng.PickleEventWrapper, cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:runner.BaseRunner@4c309d4d]" started-at="2021-11-06T13:33:09Z" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-11-06T13:33:33Z" duration-ms="24093" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Filter search and add specific watch to the basket"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Takealot website Feature"]]>
              </value>
            </param>
          </params>
          <exception class="cucumber.runtime.CucumberException">
            <message>
              <![CDATA[Step [filter by specific brand {string} and colour] is defined with 2 parameters at 'stepdef.StepDefinitionWeb.filter_by_specific_brand_and_colour(String,String) in file:/C:/Users/User/eclipse-workspace/MoulikaDemoProject/target/test-classes/'.
However, the gherkin step has 1 arguments:
 * "Garmin"
Step text: filter by specific brand "Garmin" and colour]]>
            </message>
            <full-stacktrace>
              <![CDATA[cucumber.runtime.CucumberException: Step [filter by specific brand {string} and colour] is defined with 2 parameters at 'stepdef.StepDefinitionWeb.filter_by_specific_brand_and_colour(String,String) in file:/C:/Users/User/eclipse-workspace/MoulikaDemoProject/target/test-classes/'.
However, the gherkin step has 1 arguments:
 * "Garmin"
Step text: filter by specific brand "Garmin" and colour
at cucumber.runner.PickleStepDefinitionMatch.arityMismatch(PickleStepDefinitionMatch.java:84)
at cucumber.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:36)
at cucumber.runner.TestStep.executeStep(TestStep.java:63)
at cucumber.runner.TestStep.run(TestStep.java:49)
at cucumber.runner.PickleStepTestStep.run(PickleStepTestStep.java:43)
at cucumber.runner.TestCase.run(TestCase.java:45)
at cucumber.runner.Runner.runPickle(Runner.java:40)
at cucumber.api.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:65)
at cucumber.api.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:22)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:829)
]]>
            </full-stacktrace>
          </exception> <!-- cucumber.runtime.CucumberException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(cucumber.api.testng.PickleEventWrapper, cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:runner.BaseRunner@4c309d4d]" started-at="2021-11-06T13:33:33Z" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-11-06T13:34:10Z" duration-ms="37526" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Global search and add specific watch to the basket"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Takealot website Feature"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="after()[pri:0, instance:runner.BaseRunner@4c309d4d]" started-at="2021-11-06T13:34:10Z" name="after" finished-at="2021-11-06T13:34:10Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:runner.BaseRunner@4c309d4d]" started-at="2021-11-06T13:34:10Z" name="tearDownClass" finished-at="2021-11-06T13:34:10Z" duration-ms="192" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- runner.BaseRunner -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
